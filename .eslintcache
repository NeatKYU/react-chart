[{"C:\\Users\\2066a\\chart\\src\\index.js":"1","C:\\Users\\2066a\\chart\\src\\components\\App.js":"2","C:\\Users\\2066a\\chart\\src\\components\\SideBar.js":"3","C:\\Users\\2066a\\chart\\src\\components\\Header.js":"4","C:\\Users\\2066a\\chart\\src\\components\\Home.js":"5","C:\\Users\\2066a\\chart\\src\\components\\Chart.js":"6","C:\\Users\\2066a\\chart\\src\\components\\chartPage\\ChartPage.js":"7","C:\\Users\\2066a\\chart\\src\\components\\ToastChart.js":"8","C:\\Users\\2066a\\chart\\src\\components\\chartPage\\ToastChartPage.js":"9"},{"size":263,"mtime":1611730859683,"results":"10","hashOfConfig":"11"},{"size":587,"mtime":1611891788440,"results":"12","hashOfConfig":"11"},{"size":1605,"mtime":1611891772250,"results":"13","hashOfConfig":"11"},{"size":190,"mtime":1611729758924,"results":"14","hashOfConfig":"11"},{"size":215,"mtime":1611733610644,"results":"15","hashOfConfig":"11"},{"size":1323,"mtime":1611815391677,"results":"16","hashOfConfig":"11"},{"size":1707,"mtime":1611815328849,"results":"17","hashOfConfig":"11"},{"size":1444,"mtime":1611905887649,"results":"18","hashOfConfig":"11"},{"size":232,"mtime":1611905234219,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rzpii1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\2066a\\chart\\src\\index.js",[],["42","43"],"C:\\Users\\2066a\\chart\\src\\components\\App.js",[],"C:\\Users\\2066a\\chart\\src\\components\\SideBar.js",[],"C:\\Users\\2066a\\chart\\src\\components\\Header.js",[],"C:\\Users\\2066a\\chart\\src\\components\\Home.js",[],["44","45"],"C:\\Users\\2066a\\chart\\src\\components\\Chart.js",["46"],"import React from \"react\";\r\nimport \"../../node_modules/react-vis/dist/style.css\";\r\nimport {\r\n  XYPlot,\r\n  LineSeries,\r\n  VerticalBarSeries,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  AreaSeries,\r\n  XAxis,\r\n  YAxis,\r\n} from \"react-vis\";\r\n\r\nexport default function Chart({ chartKind }) {\r\n  const data = [\r\n    { x: 0, y: 8 },\r\n    { x: 1, y: 5 },\r\n    { x: 2, y: 4 },\r\n    { x: 3, y: 9 },\r\n    { x: 4, y: 1 },\r\n    { x: 5, y: 7 },\r\n    { x: 6, y: 6 },\r\n    { x: 7, y: 3 },\r\n    { x: 8, y: 2 },\r\n    { x: 9, y: 0 },\r\n    { x: 10, y: 100 },\r\n  ];\r\n\r\n  const ChartValue = (chartKind) => {\r\n    if (chartKind === \"LineSeries\") {\r\n      return <LineSeries data={data} />;\r\n    } else if (chartKind === \"VerticalBarSeries\") {\r\n      return <VerticalBarSeries data={data} />;\r\n    } else if (chartKind === \"AreaSeries\") {\r\n      return <AreaSeries data={data} />;\r\n    } else {\r\n      <div>\r\n        <h1>not exist chartKind</h1>\r\n      </div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <XYPlot height={300} width={(window.innerWidth * 80) / 100}>\r\n        {ChartValue(chartKind)}\r\n        {/* <VerticalGridLines /> */}\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\2066a\\chart\\src\\components\\chartPage\\ChartPage.js",["47"],"import React, { useState } from \"react\";\r\nimport Chart from \"../Chart\";\r\nimport Header from \"../Header\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\n\r\nexport default function ChartPage() {\r\n  const [chartValue, setChartValue] = useState(\"LineSeries\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const ChangeChart = (chartKind) => {\r\n    setChartValue(chartKind);\r\n  };\r\n\r\n  const ExampleCustomInput = ({ value, onClick }) => (\r\n    <button className=\"example-custom-input\" onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1 style={{ textAlign: \"center\" }}>Chart Page</h1>\r\n      <Chart chartKind={chartValue}></Chart>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <button className=\"ui button\">일</button>\r\n        <button className=\"ui button\">1주일</button>\r\n        <button className=\"ui button\">1개월</button>\r\n        <button className=\"ui button\">3개월</button>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n          customInput={<ExampleCustomInput />}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <button className=\"ui button\" onClick={() => ChangeChart(\"LineSeries\")}>\r\n          Line Chart\r\n        </button>\r\n        <button\r\n          className=\"ui button\"\r\n          onClick={() => ChangeChart(\"VerticalBarSeries\")}\r\n        >\r\n          Bar Chart\r\n        </button>\r\n        <button className=\"ui button\" onClick={() => ChangeChart(\"AreaSeries\")}>\r\n          Area Chart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\2066a\\chart\\src\\components\\ToastChart.js",["48"],"C:\\Users\\2066a\\chart\\src\\components\\chartPage\\ToastChartPage.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":20},{"ruleId":"55","severity":1,"message":"59","line":4,"column":22,"nodeType":"57","messageId":"58","endLine":4,"endColumn":36},{"ruleId":"55","severity":1,"message":"60","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'VerticalGridLines' is defined but never used.","Identifier","unusedVar","'registerLocale' is defined but never used.","'BarChart' is defined but never used.","no-global-assign","no-unsafe-negation"]